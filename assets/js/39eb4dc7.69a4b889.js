"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2990],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=l(n),h=i,m=d["".concat(s,".").concat(h)]||d[h]||p[h]||o;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<o;l++)a[l]=n[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1259:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=n(7462),i=(n(7294),n(3905));const o={},a="Developer Certificate of Origin + Licenses",c={unversionedId:"github/dco-and-licenses",id:"github/dco-and-licenses",title:"Developer Certificate of Origin + Licenses",description:"The Developer Certificate of Origin (DCO) is a lightweight way for contributors",source:"@site/community/github/dco-and-licenses.md",sourceDirName:"github",slug:"/github/dco-and-licenses",permalink:"/community/github/dco-and-licenses",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"community",previous:{title:"Branch Protection Rules",permalink:"/community/github/branchprotection"},next:{title:"Tips and Tricks",permalink:"/community/github/tips-and-tricks"}},s={},l=[{value:"Further reading",id:"further-reading",level:2}],u={toc:l};function p(e){let{components:t,...o}=e;return(0,i.kt)("wrapper",(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"developer-certificate-of-origin--licenses"},"Developer Certificate of Origin + Licenses"),(0,i.kt)("p",null,"The Developer Certificate of Origin (DCO) is a lightweight way for contributors\nto certify that they wrote or otherwise have the right to submit the code they\nare contributing to the Sovereign Cloud Stack."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"By making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n")),(0,i.kt)("p",null,"All contributions to the Sovereign Cloud Stack are licensed under the\n(OSI approved) open source license of the upstream project being used therein\n(very often this is the ",(0,i.kt)("a",{parentName:"p",href:"https://www.apache.org/licenses/LICENSE-2.0"},"Apache Software License v2"),")."),(0,i.kt)("p",null,"Where we create independent code, we prefer to use the ",(0,i.kt)("a",{parentName:"p",href:"https://www.gnu.org/licenses/agpl-3.0.html"},"GNU Affero General Public License 3"),",\nexcept for interface code which we would put under LGPL-3 (weak copyleft).\nOwn documentation content is licensed under ",(0,i.kt)("a",{parentName:"p",href:"https://creativecommons.org/licenses/by-sa/4.0/"},"Creative Commons BY-SA 4.0"),"."),(0,i.kt)("p",null,"Contributors sign-off that they adhere to these requirements by adding a ",(0,i.kt)("inlineCode",{parentName:"p"},"Signed-off-by"),"\nline to commit messages."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"My fancy commit message\n\nSigned-off-by: Christian Berendt <berendt@betacloud-solutions.de>\n")),(0,i.kt)("p",null,"Git has a ",(0,i.kt)("inlineCode",{parentName:"p"},"-s")," command line option to append this automatically to your commit message:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"git commit -s -m 'My fancy commit message'\n")),(0,i.kt)("p",null,"The status of a pull request is set to failed if commits do not contain a valid ",(0,i.kt)("inlineCode",{parentName:"p"},"Signed-off-by")," line."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"Failed DCO in GitHub",src:n(6538).Z,width:"1868",height:"864"})),(0,i.kt)("p",null,"Considerations behind the choice of AGPLv3, CC-BY-SA and the usage of the DCO can be found ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/SovereignCloudStack/docs/blob/main/community/license-considerations.md"},"license-considerations.md"),"."),(0,i.kt)("h2",{id:"further-reading"},"Further reading"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://developercertificate.org/"},"https://developercertificate.org/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://julien.ponge.org/blog/developer-certificate-of-origin-versus-contributor-license-agreements/"},"https://julien.ponge.org/blog/developer-certificate-of-origin-versus-contributor-license-agreements/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://lwn.net/Articles/592503/"},"https://lwn.net/Articles/592503/"))))}p.isMDXComponent=!0},6538:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/github-failed-dco-82f9dafea83c36769069087ceb522cdc.png"}}]);