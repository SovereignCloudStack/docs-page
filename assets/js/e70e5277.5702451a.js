"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9940],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>u});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var m=n.createContext({}),p=function(e){var t=n.useContext(m),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=p(e.components);return n.createElement(m.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,m=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),g=p(a),u=r,d=g["".concat(m,".").concat(u)]||g[u]||c[u]||i;return a?n.createElement(d,o(o({ref:t},l),{},{components:a})):n.createElement(d,o({ref:t},l))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=g;var s={};for(var m in t)hasOwnProperty.call(t,m)&&(s[m]=t[m]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"},244:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={},o="Overview",s={unversionedId:"iaas/components/openstack-image-manager/overview",id:"iaas/components/openstack-image-manager/overview",title:"Overview",description:"The OpenStack Image Manager is an easy to use Application for managing all images in the OpenStack horizont.",source:"@site/docs/02-iaas/components/openstack-image-manager/overview.md",sourceDirName:"02-iaas/components/openstack-image-manager",slug:"/iaas/components/openstack-image-manager/overview",permalink:"/docs/iaas/components/openstack-image-manager/overview",draft:!1,editUrl:"https://github.com/SovereignCloudStack/docs-page/tree/main/docs/02-iaas/components/openstack-image-manager/overview.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Openstack Image Manager",permalink:"/docs/category/openstack-image-manager"},next:{title:"Requirements",permalink:"/docs/iaas/components/openstack-image-manager/requirements"}},m={},p=[{value:"Mirroring of images",id:"mirroring-of-images",level:2},{value:"Updating images",id:"updating-images",level:2},{value:"Mapping to SCS Image Metadata",id:"mapping-to-scs-image-metadata",level:2}],l={toc:p};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The OpenStack Image Manager is an easy to use Application for managing all images in the OpenStack horizont."),(0,r.kt)("h2",{id:"mirroring-of-images"},"Mirroring of images"),(0,r.kt)("p",null,"Since the upstreams often only keep their images for a short time, we mirror most of the images on our ",(0,r.kt)("strong",{parentName:"p"},"minio.services.osism.tech"),"\nmirror. This makes us independent of the availability of the images in the individual upstreams."),(0,r.kt)("h2",{id:"updating-images"},"Updating images"),(0,r.kt)("p",null,"Some of the images are automatically updated by a CI job. The latest available build at the time of the CI job execution is mirrored and\nmade available as the current version."),(0,r.kt)("p",null,"Currently, the following images are updated once a week (every Sunday at 0 am):"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Almalinux"),(0,r.kt)("li",{parentName:"ul"},"CentOS"),(0,r.kt)("li",{parentName:"ul"},"Debian"),(0,r.kt)("li",{parentName:"ul"},"Rockylinux"),(0,r.kt)("li",{parentName:"ul"},"Ubuntu")),(0,r.kt)("h2",{id:"mapping-to-scs-image-metadata"},"Mapping to SCS Image Metadata"),(0,r.kt)("p",null,"The value of ",(0,r.kt)("strong",{parentName:"p"},"login")," is stored as ",(0,r.kt)("strong",{parentName:"p"},"image_original_user")," in the metadata of an image."),(0,r.kt)("p",null,"If ",(0,r.kt)("strong",{parentName:"p"},"image_description")," is not set as meta information, ",(0,r.kt)("strong",{parentName:"p"},"image_description")," is set to the name of the image."),(0,r.kt)("p",null,"The value of ",(0,r.kt)("strong",{parentName:"p"},"build_date")," of a specific version of an image is stored as ",(0,r.kt)("strong",{parentName:"p"},"image_build_date")," in the metadata of an image."),(0,r.kt)("p",null,"The value of ",(0,r.kt)("strong",{parentName:"p"},"url")," of a specific version of an image is stored as ",(0,r.kt)("strong",{parentName:"p"},"image_source")," in the metadata of an image."))}c.isMDXComponent=!0}}]);