"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1266],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),s=u(n),d=i,f=s["".concat(c,".").concat(d)]||s[d]||m[d]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,l=new Array(o);l[0]=s;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:i,l[1]=a;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},9770:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const o={},l="Linting Guide",a={unversionedId:"contribute/linting-guide",id:"contribute/linting-guide",title:"Linting Guide",description:"In order to have a clean content repository regarding all markdown files we enforce linting on:",source:"@site/community/contribute/linting-guide.md",sourceDirName:"contribute",slug:"/contribute/linting-guide",permalink:"/community/contribute/linting-guide",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"community",previous:{title:"Documentation workflow explanation",permalink:"/community/contribute/docs-workflow-explanation"},next:{title:"Installation",permalink:"/community/contribute/local-docusaurus-development-guide"}},c={},u=[{value:"Pre Commit",id:"pre-commit",level:2},{value:"Github Workflows",id:"github-workflows",level:2}],p={toc:u};function m(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"linting-guide"},"Linting Guide"),(0,i.kt)("p",null,"In order to have a clean content repository regarding all markdown files we enforce linting on:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"all staged files prior committing"),(0,i.kt)("li",{parentName:"ol"},"all Pull Requests")),(0,i.kt)("h2",{id:"pre-commit"},"Pre Commit"),(0,i.kt)("p",null,"Run markdownlint against staged git files with Husky git hook:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/okonet/lint-staged"},"lint-staged")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/typicode/husky"},"husky"))),(0,i.kt)("p",null,"The rules are enforced on markdown files, for which we use:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/DavidAnson/markdownlint-cli2"},"markdownlint-cli2")," for markdownlint"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://github.com/prettier/prettier"},"prettier")," for code formatting")),(0,i.kt)("p",null,"The markdownlint rules are defined in the configuration file ",(0,i.kt)("inlineCode",{parentName:"p"},".markdownlint-cli2.jsonc")),(0,i.kt)("p",null,"Additionally we use ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/OnkarRuikar/markdownlint-rule-search-replace"},"markdownlint-rule-search-replace")," for fixing"),(0,i.kt)("h2",{id:"github-workflows"},"Github Workflows"),(0,i.kt)("p",null,"There are two actions running on every Pull Request on the ",(0,i.kt)("inlineCode",{parentName:"p"},"main")," branch."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"link-validator.yml"),"is checking every link in markdown files."),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"pr-markdownlint.yml"),"is checking all markdown files regarding to the rules defined within ",(0,i.kt)("inlineCode",{parentName:"li"},".markdownlint-cli2.jsonc"))))}m.isMDXComponent=!0}}]);