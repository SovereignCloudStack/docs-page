"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3826],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=l(n),m=o,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(k,i(i({ref:t},p),{},{components:n})):r.createElement(k,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6640:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={},i="Quickstart",c={unversionedId:"container/components/k8s-cluster-api-provider/doc/quickstart",id:"container/components/k8s-cluster-api-provider/doc/quickstart",title:"Quickstart",description:"This guide shows you how to get working Kubernetes clusters on a SCS cloud",source:"@site/docs/03-container/components/k8s-cluster-api-provider/doc/quickstart.md",sourceDirName:"03-container/components/k8s-cluster-api-provider/doc",slug:"/container/components/k8s-cluster-api-provider/doc/quickstart",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/quickstart",draft:!1,editUrl:"https://github.com/SovereignCloudStack/docs-page/tree/main/docs/03-container/components/k8s-cluster-api-provider/doc/quickstart.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Requirements",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/requirements"},next:{title:"Makefile reference",permalink:"/docs/container/components/k8s-cluster-api-provider/doc/make-reference"}},s={},l=[{value:"Requirements",id:"requirements",level:2},{value:"Prepare the environment",id:"prepare-the-environment",level:2},{value:"Create a test cluster",id:"create-a-test-cluster",level:2},{value:"Teardown",id:"teardown",level:2},{value:"Beyond quickstart",id:"beyond-quickstart",level:2}],p={toc:l};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"quickstart"},"Quickstart"),(0,o.kt)("p",null,"This guide shows you how to get working Kubernetes clusters on a SCS cloud\nvia ",(0,o.kt)("a",{parentName:"p",href:"https://cluster-api.sigs.k8s.io/"},"cluster-api"),"(CAPI)."),(0,o.kt)("h2",{id:"requirements"},"Requirements"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"make"),(0,o.kt)("li",{parentName:"ul"},"kubectl"),(0,o.kt)("li",{parentName:"ul"},"terraform"),(0,o.kt)("li",{parentName:"ul"},"yq v2 or v4 (see note below)"),(0,o.kt)("li",{parentName:"ul"},"python3-openstackclient, python3-octaviaclient")),(0,o.kt)("h2",{id:"prepare-the-environment"},"Prepare the environment"),(0,o.kt)("p",null,"You need access to an OpenStack project.\nCopy the default environment and adjust the options according to your cloud."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"cp terraform/environments/environment-{default,<YOURCLOUD>}.tfvars\n")),(0,o.kt)("p",null,"Edit ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform/environments/environment-<YOURCLOUD>.tfvars")," with your favourite text editor. Every option without a\ndefault value must be set.\nAdd\na ",(0,o.kt)("a",{parentName:"p",href:"https://docs.openstack.org/python-openstackclient/latest/configuration/index.html#configuration-files"},"clouds.yaml"),"\ninside the ",(0,o.kt)("inlineCode",{parentName:"p"},"terraform")," dir, in ",(0,o.kt)("inlineCode",{parentName:"p"},"~/.config/openstack")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/openstack"),"."),(0,o.kt)("p",null,"It is recommended to set the name of the cloud in the ",(0,o.kt)("inlineCode",{parentName:"p"},"clouds.yml")," to the same value as the ",(0,o.kt)("inlineCode",{parentName:"p"},"cloud_provider")," in\nthe ",(0,o.kt)("inlineCode",{parentName:"p"},"environment-<YOURCLOUD>.tfvars"),", then you only have to specify the ",(0,o.kt)("inlineCode",{parentName:"p"},"ENVIRONMENT")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"OS_CLOUDS")," variable."),(0,o.kt)("h2",{id:"create-a-test-cluster"},"Create a test cluster"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"# Set the ENVIRONMENT to the name specified in the name of the file\n# `cloud_provider` option has to be set in the environment file\n# to the name of the cloud in the clouds.yaml\nexport ENVIRONMENT=<YOURCLOUD>`\n\n# Create your environment. This includes a management node as virtual machine\n# in your OpenStack environment as well as a Kubernetes testcluster.\nmake create\n\n# Get the kubeconfig of the testcluster\nmake get-kubeconfig\n\n# Interact with the testcluster\nkubectl --kubeconfig testcluster.yaml.<YOURCLOUD> get nodes\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: If ",(0,o.kt)("inlineCode",{parentName:"p"},"make create")," fails with a ",(0,o.kt)("inlineCode",{parentName:"p"},"yq")," related error message, the detection of the\n",(0,o.kt)("inlineCode",{parentName:"p"},"yq")," variant in the Makefile may have gone wrong. You can force the usage of the other\nvariant by editing the Makefile -- we plan to improve this.")),(0,o.kt)("h2",{id:"teardown"},"Teardown"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"make clean\n")),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"make clean")," fails to clean up completely, you can also use the ",(0,o.kt)("inlineCode",{parentName:"p"},"fullclean")," target.\nReview the ",(0,o.kt)("a",{parentName:"p",href:"/docs/container/components/k8s-cluster-api-provider/doc/make-reference#teardown"},"Teardown section of the Makefile reference")," document for more details."),(0,o.kt)("h2",{id:"beyond-quickstart"},"Beyond quickstart"),(0,o.kt)("p",null,"This guide assumes you just create one test cluster directly when creating the\nmanagement server.\nIn a production setting, you would not use this test cluster but create clusters\nvia the management server. You can read more about this in the ",(0,o.kt)("a",{parentName:"p",href:"/docs/container/components/k8s-cluster-api-provider/doc/usage/"},"usage guide"),"."))}u.isMDXComponent=!0}}]);