"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[393],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>d});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,g=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return n?r.createElement(g,i(i({ref:t},l),{},{components:n})):r.createElement(g,i({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5714:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={},i="Requirements",s={unversionedId:"iaas/components/openstack-image-manager/requirements",id:"iaas/components/openstack-image-manager/requirements",title:"Requirements",description:"OpenStack image service",source:"@site/docs/02-iaas/components/openstack-image-manager/requirements.md",sourceDirName:"02-iaas/components/openstack-image-manager",slug:"/iaas/components/openstack-image-manager/requirements",permalink:"/docs/iaas/components/openstack-image-manager/requirements",draft:!1,editUrl:"https://github.com/SovereignCloudStack/docs-page/tree/main/docs/02-iaas/components/openstack-image-manager/requirements.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Overview",permalink:"/docs/iaas/components/openstack-image-manager/overview"},next:{title:"Quickstart",permalink:"/docs/iaas/components/openstack-image-manager/quickstart"}},c={},p=[{value:"OpenStack image service",id:"openstack-image-service",level:2},{value:"S3 storage backend",id:"s3-storage-backend",level:2}],l={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"requirements"},"Requirements"),(0,a.kt)("h2",{id:"openstack-image-service"},"OpenStack image service"),(0,a.kt)("p",null,"The image service for OpenStack is called Glance. This service is needed to upload and discover data assets that are used by other\nservices. You can configure the Glance service as you need."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"Note:"),"\nSee upstream glance documentation for more details: ",(0,a.kt)("a",{parentName:"p",href:"https://docs.openstack.org/glance/yoga/configuration/sample-configuration.html"},"https://docs.openstack.org/glance/yoga/configuration/sample-configuration.html"))),(0,a.kt)("p",null,"Since this script stores many images in a project, the Glance quota must be set accordingly high or to unlimited."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[DEFAULT]\nuser_storage_quota = 1TB\n")),(0,a.kt)("p",null,"With most storage backends it makes sense to convert the imported images directly to RAW. So it is required for using Ceph and it\xb4s\nfeatures too. Recited from the Ceph documentation ",(0,a.kt)("a",{parentName:"p",href:"https://docs.ceph.com/en/latest/rbd/qemu-rbd/"},"https://docs.ceph.com/en/latest/rbd/qemu-rbd/")," and\n",(0,a.kt)("a",{parentName:"p",href:"https://docs.ceph.com/en/nautilus/rbd/rbd-openstack/"},"https://docs.ceph.com/en/nautilus/rbd/rbd-openstack/"),":"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},'"The raw data format is really the only sensible format option to use with RBD. Technically, you could use other QEMU-supported formats\n(such as qcow2 or vmdk), but doing so would add additional overhead, and would also render the volume unsafe for virtual machine live\nmigration when caching (see below) is enabled."'),(0,a.kt)("p",{parentName:"blockquote"},'"Important Ceph doesn\'t support QCOW2 for hosting a virtual machine disk. Thus if you want to boot virtual machines in Ceph (ephemeral\nbackend or boot from volume), the Glance image format must be RAW."')),(0,a.kt)("p",null,"This requires the following parameter for the image import workflow."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ini"},"[taskflow_executor]\nconversion_format = raw\n\n[image_import_opts]\nimage_import_plugins = ['image_decompression', 'image_conversion']\n\n[image_conversion]\noutput_format = raw\n")),(0,a.kt)("h2",{id:"s3-storage-backend"},"S3 storage backend"),(0,a.kt)("p",null,"If the mirror functionality is used, an S3 storage backend is required. The use of the mirror functionality is optional and is not\nused by default. S3 Storage Backend can store files without a size limitation. It is accessible via APIs.\nWith S3, among other things, versioning and fine grained access rights can be configured."),(0,a.kt)("p",null,"Therefore, no S3 storage backend is required to use the OpenStack Image Manager."))}m.isMDXComponent=!0}}]);